# Config for multi-device full finetuning in full_finetune_distributed.py
# using a Llama2 7B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Llama-2-7b-hf --output-dir /tmp/Llama-2-7b-hf --hf-token <HF_TOKEN>
#
# To launch on 4 devices, run the following command from root:
#   tune run --nnodes 1 --nproc_per_node 4 full_finetune_distributed --config llama2/7B_full
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run --nnodes 1 --nproc_per_node 4 full_finetune_distributed --config llama2/7B_full checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works best when the model is being fine-tuned on 2+ GPUs.
# Single device full finetuning requires more memory optimizations. It's
# best to use 7B_full_single_device.yaml for those cases


# Tokenizer
tokenizer:
  _component_: torchtune.models.llama2.llama2_tokenizer
  path: /tmp/Llama-2-7b-hf/tokenizer.model
  max_seq_len: null

# Dataset
dataset:
  packed: False # Set to true for great speed ups
  source: json
  _component_: torchtune.datasets.alpaca_dataset
  data_files: ${HOME}/scratch/workdir/llama/dataset/alpaca1024
seed: null
shuffle: True

# Model Arguments
model:
  path: ${HOME}/scratch/workdir/llama/model/litgpt/meta-llama/Llama-2-7b-hf
  _component_: torchtune.models.llama2.llama2_7b

checkpointer:
  recipe_checkpoint: null
  output_dir: /tmp/Llama-2-7b-hf
  model_type: LLAMA2
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 128
epochs: 1
optimizer:
  _component_: torch.optim.AdamW
max_steps_per_epoch: 20
gradient_accumulation_steps: 2

# Training env
device: cuda

# Memory management
enable_activation_checkpointing: True

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.DiskLogger
  log_dir: /home/552/ps8597/scratch/workdir/llama_output/profile_output
output_dir: /home/552/ps8597/scratch/workdir/llama_output/output_model/torchtune
log_every_n_steps: 1
log_peak_memory_stats: True
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: True

  #Output directory of trace artifacts
  output_dir: /home/552/ps8597/scratch/workdir/llama_output/profile_output

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: True
  with_stack: True
  record_shapes: True
  with_flops: True
